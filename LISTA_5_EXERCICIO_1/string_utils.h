#ifndef STRING_UTILS_H
#define STRING_UTILS_H

#include <string>


/**
 * Returns the index of the first ocurrence of target in str.
 * 
 * str and target must have size > 0 and str.size() > target.size().
 * 
 * If target isn't in str, return -1.
*/
int contains(std::string str, std::string target);


/**
 * Returns an array of strings with the substrings generated by splitting str based on
 * the occurences of splitter.
 * 
 * Example 1: split("testing split function", " ") -> {"testing", "split", "function", nullptr}
 * Example 2: split("testing", " ") -> {"testing", nullptr}
*/
std::string **split(std::string str, std::string splitter);


/**
 * Determines if letter is inside the interval.
 * 
 * interval must be like a-z
*/
bool is_in_interval(char letter, std::string interval);


#endif